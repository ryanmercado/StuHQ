CREATE TABLE calendar (
    usr_id INT NOT NULL,
    event_id INT NOT NULL,
    created_epoch TIMESTAMP NOT NULL,
    event_desc TEXT NOT NULL,
    event_type VARCHAR(50) NOT NULL,
    event_title VARCHAR(50) NOT NULL,
    start_epoch INT NULL,
    end_epoch INT NULL,
    on_to_do_list BOOLEAN NOT NULL,
    extra_data VARCHAR(250) NULL,
    is_submitted BOOLEAN NULL,
    want_notification BOOLEAN NULL,
    CONSTRAINT calendar_pk PRIMARY KEY (usr_id, event_id), 
    CONSTRAINT calendar_usr_info
    FOREIGN KEY (usr_id)
    REFERENCES usr_info (usr_id) ON DELETE CASCADE
);


CREATE TABLE usr_info (
    usr_id INT  NOT NULL,
    username varchar(50)  NOT NULL,
    pswd_hash varchar(50)  NOT NULL,
    usr_email varchar(250)  NOT NULL,
    created_epoch INT  NOT NULL,
    CONSTRAINT usr_info_pk PRIMARY KEY (usr_id)
);


CREATE TABLE awards (
    usr_id int  NOT NULL,
    awd_id int  NOT NULL,
    title varchar(50)  NOT NULL,
    "desc" TEXT  NULL,
    CONSTRAINT awards_pk PRIMARY KEY (awd_id),
    CONSTRAINT awards_usr_info
    FOREIGN KEY (usr_id)
    REFERENCES usr_info (usr_id) ON DELETE CASCADE
);

CREATE TABLE course_work (
    usr_id int  NOT NULL,
    course_id int  NOT NULL,
    name varchar(50)  NOT NULL,
    CONSTRAINT course_work_pk PRIMARY KEY (course_id),
    CONSTRAINT course_work_usr_info
    FOREIGN KEY (usr_id)
    REFERENCES usr_info (usr_id) ON DELETE CASCADE
);

CREATE TABLE curr_stock (
    usr_id INTEGER PRIMARY KEY,
    stock_list TEXT,
    CONSTRAINT curr_stock_usr_info
    FOREIGN KEY (usr_id)
    REFERENCES usr_info (usr_id) ON DELETE CASCADE
);


CREATE TABLE experience (
    usr_id int  NOT NULL,
    job_id int  NOT NULL PRIMARY KEY,
    company varchar(100)  NOT NULL,
    role varchar(100)  NOT NULL,
    start_date varchar(50)  NOT NULL,
    end_date varchar(50)  NOT NULL,
    location varchar(100)  NULL,
    desc_arr TEXT  NOT NULL,
    CONSTRAINT experience_usr_info
    FOREIGN KEY (usr_id)
    REFERENCES usr_info (usr_id) ON DELETE CASCADE
);

CREATE TABLE extracurr (
    usr_id int  NOT NULL,
    act_id int  NOT NULL PRIMARY KEY,
    title varchar(50)  NOT NULL,
    desc_arr TEXT  NULL,
    CONSTRAINT extracurr_usr_info
    FOREIGN KEY (usr_id)
    REFERENCES usr_info (usr_id) ON DELETE CASCADE
);

CREATE TABLE general_info (
    usr_id int  NOT NULL PRIMARY KEY,
    lastname varchar(50)  NOT NULL,
    firstname varchar(50)  NOT NULL,
    phone int  NULL,
    email varchar(100)  NOT NULL,
    linkedin varchar(100)  NULL,
    edu varchar(150)  NULL,
    grad_date varchar(50)  NULL,
    major varchar(50)  NULL,
    GPA decimal(3,2)  NULL,
    CONSTRAINT general_info_usr_info
    FOREIGN KEY (usr_id)
    REFERENCES usr_info (usr_id) ON DELETE CASCADE
);

CREATE TABLE grocery_list (
    usr_id INTEGER PRIMARY KEY,
    grocery_list TEXT,
    CONSTRAINT grocery_list_usr_info
    FOREIGN KEY (usr_id)
    REFERENCES usr_info (usr_id) ON DELETE CASCADE
);

CREATE TABLE objective (
    usr_id int  NOT NULL,
    obj_str varchar(250)  NOT NULL,
    obj_id int  NOT NULL PRIMARY KEY,
    CONSTRAINT objective_usr_info
    FOREIGN KEY (usr_id)
    REFERENCES usr_info (usr_id) ON DELETE CASCADE
);

CREATE TABLE projects (
    usr_id int  NOT NULL,
    proj_id int  NOT NULL PRIMARY KEY,
    title varchar(50)  NOT NULL,
    who_for varchar(50)  NULL,
    date varchar(50)  NOT NULL,
    desc_arr TEXT  NOT NULL,
    CONSTRAINT projects_usr_info
    FOREIGN KEY (usr_id)
    REFERENCES usr_info (usr_id) ON DELETE CASCADE
);

CREATE TABLE recipes (
    usr_id INTEGER PRIMARY KEY,
    recipe_lists TEXT,
    CONSTRAINT recipes_usr_info
    FOREIGN KEY (usr_id)
    REFERENCES usr_info (usr_id) ON DELETE CASCADE
);

CREATE TABLE technical_skills (
    usr_id int  NOT NULL,
    skill_id int  NOT NULL PRIMARY KEY,
    name varchar(100)  NOT NULL,
    CONSTRAINT tech_skills_usr_info
    FOREIGN KEY (usr_id)
    REFERENCES usr_info (usr_id) ON DELETE CASCADE
);

CREATE TABLE timezone_idx (
    tz_id int  NOT NULL,
    tz int  NOT NULL,
    tz_str varchar(10) NOT NULL,
    CONSTRAINT timezone_idx_pk PRIMARY KEY (tz_id)
);

CREATE TABLE usr_idx (
    usr_id int  NOT NULL PRIMARY KEY,
    tz_id int  NOT NULL,
    CONSTRAINT tz_id_exists 
    FOREIGN KEY (tz_id)
    REFERENCES timezone_idx (tz_id),
    CONSTRAINT usr_idx_usr_info
    FOREIGN KEY (usr_id)
    REFERENCES usr_info (usr_id) ON DELETE CASCADE
);

CREATE TABLE volunteer_work (
    usr_id int  NOT NULL,
    vol_id int  NOT NULL PRIMARY KEY,
    company varchar(50)  NOT NULL,
    role varchar(50)  NOT NULL,
    start_date varchar(50)  NOT NULL,
    end_date varchar(50)  NOT NULL,
    CONSTRAINT volunteer_work_usr_info
    FOREIGN KEY (usr_id)
    REFERENCES usr_info (usr_id) ON DELETE CASCADE
);

